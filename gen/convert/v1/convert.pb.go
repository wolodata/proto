// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: convert/v1/convert.proto

package convertv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PdfToHtmlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pdf []byte `protobuf:"bytes,1,opt,name=pdf,proto3" json:"pdf,omitempty"`
}

func (x *PdfToHtmlRequest) Reset() {
	*x = PdfToHtmlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_convert_v1_convert_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdfToHtmlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdfToHtmlRequest) ProtoMessage() {}

func (x *PdfToHtmlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_convert_v1_convert_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdfToHtmlRequest.ProtoReflect.Descriptor instead.
func (*PdfToHtmlRequest) Descriptor() ([]byte, []int) {
	return file_convert_v1_convert_proto_rawDescGZIP(), []int{0}
}

func (x *PdfToHtmlRequest) GetPdf() []byte {
	if x != nil {
		return x.Pdf
	}
	return nil
}

type PdfToHtmlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Html string `protobuf:"bytes,1,opt,name=html,proto3" json:"html,omitempty"`
}

func (x *PdfToHtmlResponse) Reset() {
	*x = PdfToHtmlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_convert_v1_convert_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdfToHtmlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdfToHtmlResponse) ProtoMessage() {}

func (x *PdfToHtmlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_convert_v1_convert_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdfToHtmlResponse.ProtoReflect.Descriptor instead.
func (*PdfToHtmlResponse) Descriptor() ([]byte, []int) {
	return file_convert_v1_convert_proto_rawDescGZIP(), []int{1}
}

func (x *PdfToHtmlResponse) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

var File_convert_v1_convert_proto protoreflect.FileDescriptor

var file_convert_v1_convert_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x22, 0x24, 0x0a, 0x10, 0x50, 0x64, 0x66, 0x54, 0x6f, 0x48,
	0x74, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x64,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x70, 0x64, 0x66, 0x22, 0x27, 0x0a, 0x11,
	0x50, 0x64, 0x66, 0x54, 0x6f, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x74, 0x6d, 0x6c, 0x32, 0x5c, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x50, 0x64, 0x66, 0x54, 0x6f,
	0x48, 0x74, 0x6d, 0x6c, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x64, 0x66, 0x54, 0x6f, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x64, 0x66, 0x54, 0x6f, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x9b, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x77, 0x6f, 0x6c, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x2f, 0x76, 0x31,
	0x3b, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58,
	0xaa, 0x02, 0x0a, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_convert_v1_convert_proto_rawDescOnce sync.Once
	file_convert_v1_convert_proto_rawDescData = file_convert_v1_convert_proto_rawDesc
)

func file_convert_v1_convert_proto_rawDescGZIP() []byte {
	file_convert_v1_convert_proto_rawDescOnce.Do(func() {
		file_convert_v1_convert_proto_rawDescData = protoimpl.X.CompressGZIP(file_convert_v1_convert_proto_rawDescData)
	})
	return file_convert_v1_convert_proto_rawDescData
}

var file_convert_v1_convert_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_convert_v1_convert_proto_goTypes = []interface{}{
	(*PdfToHtmlRequest)(nil),  // 0: convert.v1.PdfToHtmlRequest
	(*PdfToHtmlResponse)(nil), // 1: convert.v1.PdfToHtmlResponse
}
var file_convert_v1_convert_proto_depIdxs = []int32{
	0, // 0: convert.v1.ConvertService.PdfToHtml:input_type -> convert.v1.PdfToHtmlRequest
	1, // 1: convert.v1.ConvertService.PdfToHtml:output_type -> convert.v1.PdfToHtmlResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_convert_v1_convert_proto_init() }
func file_convert_v1_convert_proto_init() {
	if File_convert_v1_convert_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_convert_v1_convert_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdfToHtmlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_convert_v1_convert_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdfToHtmlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_convert_v1_convert_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_convert_v1_convert_proto_goTypes,
		DependencyIndexes: file_convert_v1_convert_proto_depIdxs,
		MessageInfos:      file_convert_v1_convert_proto_msgTypes,
	}.Build()
	File_convert_v1_convert_proto = out.File
	file_convert_v1_convert_proto_rawDesc = nil
	file_convert_v1_convert_proto_goTypes = nil
	file_convert_v1_convert_proto_depIdxs = nil
}

syntax = "proto3";

package user.v1;

import "permission/v1/permission.proto";
import "role/v1/role.proto";

service UserService {
  rpc GetUserInfo(GetUserInfoRequest) returns (GetUserInfoResponse) {}
  rpc ChangeNickname(ChangeNicknameRequest) returns (ChangeNicknameResponse) {}
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse) {}
  rpc BindMobile(BindMobileRequest) returns (BindMobileResponse) {}
  rpc UnbindMobile(UnbindMobileRequest) returns (UnbindMobileResponse) {}
  rpc GetPermissionList(GetPermissionListRequest) returns (GetPermissionListResponse) {}
  rpc ListUserDevices(ListUserDevicesRequest) returns (ListUserDevicesResponse) {}
  rpc LogoutDevice(LogoutDeviceRequest) returns (LogoutDeviceResponse) {}

  // 后台
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  }
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  }
  rpc AdminUpdateUserPassword(AdminUpdateUserPasswordRequest) returns (AdminUpdateUserPasswordResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  }
  rpc UpdateUserRole(UpdateUserRoleRequest) returns (UpdateUserRoleResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  }
  rpc UpdateUserStatus(UpdateUserStatusRequest) returns (UpdateUserStatusResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  }
  rpc AdminUpdateUserNicknameAndDescription(AdminUpdateUserNicknameAndDescriptionRequest) returns (AdminUpdateUserNicknameAndDescriptionResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  }
  rpc AdminUpdateUserMobile(AdminUpdateUserMobileRequest) returns (AdminUpdateUserMobileResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  }
}

message GetUserInfoRequest {}

message GetUserInfoResponse {
  string user_id = 1;
  string username = 2;
  role.v1.Role role = 3;
  string nickname = 4;
  uint64 created_at = 5;
  string mobile = 6;
  uint64 expired_at = 7;
}

message ChangeNicknameRequest {
  string nickname = 1;
}

message ChangeNicknameResponse {}

message ChangePasswordRequest {
  string password = 1;
}

message ChangePasswordResponse {}

message BindMobileRequest {
  string mobile = 1;
}

message BindMobileResponse {}

message UnbindMobileRequest {}

message UnbindMobileResponse {}

message GetPermissionListRequest {}

message GetPermissionListResponse {
  repeated string function_sets_enabled = 1;
  repeated string llm_models_disabled = 2;
  uint64 count_limit_daily_llm_talk_right_side = 3;
  uint64 count_limit_keyword = 4;
  uint64 count_limit_category = 5;
  uint64 count_limit_daily_free_ask = 6;
}

message ListUsersRequest {
  uint32 page_number = 1;
  uint32 limit = 2;
}

message ListUsersResponse {
  uint32 total_count = 1;
  uint32 page_size = 2;
  uint32 total_page = 3;
  uint32 current_page = 4;
  repeated UserWithDescription items = 5;
}

message UserWithDescription {
  string user_id = 1;
  string username = 2;
  role.v1.Role role = 3;
  bool enabled = 4;
  string nickname = 5;
  string description = 6;
  uint64 created_at = 7;
  string mobile = 8;
}

message CreateUserRequest {
  string username = 1;
  string password = 2;
  role.v1.Role role = 3;
  string nickname = 4;
  string description = 5;
}

message CreateUserResponse {
  string user_id = 1;
}

message AdminUpdateUserPasswordRequest {
  string user_id = 1;
  string password = 2;
}

message AdminUpdateUserPasswordResponse {}

message UpdateUserRoleRequest {
  string user_id = 1;
  role.v1.Role role = 2;
}

message UpdateUserRoleResponse {}

message UpdateUserStatusRequest {
  string user_id = 1;
  bool enabled = 2;
}

message UpdateUserStatusResponse {}

message AdminUpdateUserNicknameAndDescriptionRequest {
  string user_id = 1;
  string nickname = 2;
  string description = 3;
}

message AdminUpdateUserNicknameAndDescriptionResponse {}

message AdminUpdateUserMobileRequest {
  string user_id = 1;
  string mobile = 2;
}

message AdminUpdateUserMobileResponse {}

// 设备信息
message DeviceInfo {
  string token_id = 1; // 设备ID/Token ID
  string login_user_agent = 2; // 登录时的UserAgent
  string login_ip = 3; // 登录时的IP
  uint64 login_time = 4; // 登录时间（Unix时间戳）
  string last_active_user_agent = 5; // 最后活跃时的UserAgent
  string last_active_ip = 6; // 最后活跃时的IP
  uint64 last_active_time = 7; // 最后活跃时间（Unix时间戳）
  bool is_current = 8; // 是否当前设备
}

// 查询登录设备列表
message ListUserDevicesRequest {}

message ListUserDevicesResponse {
  repeated DeviceInfo devices = 1;
}

// 踢出设备（使设备token失效）
message LogoutDeviceRequest {
  string token_id = 1; // 要踢出的设备token_id
}

message LogoutDeviceResponse {}

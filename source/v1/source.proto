syntax = "proto3";

package source.v1;

import "permission/v1/permission.proto";

service SourceService {
  rpc ListSourceTypes(ListSourceTypesRequest) returns (ListSourceTypesResponse);
  rpc ListSourceCategories(ListSourceCategoriesRequest) returns (ListSourceCategoriesResponse);
  rpc ListSources(ListSourcesRequest) returns (ListSourcesResponse);
  rpc GetSource(GetSourceRequest) returns (GetSourceResponse);

  // 后台
  rpc CreateSourceType(CreateSourceTypeRequest) returns (CreateSourceTypeResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  };
  rpc DeleteSourceType(DeleteSourceTypeRequest) returns (DeleteSourceTypeResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  };
  rpc UpdateSourceType(UpdateSourceTypeRequest) returns (UpdateSourceTypeResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  };

  rpc CreateSourceCategory(CreateSourceCategoryRequest) returns (CreateSourceCategoryResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  };
  rpc DeleteSourceCategory(DeleteSourceCategoryRequest) returns (DeleteSourceCategoryResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  };
  rpc UpdateSourceCategory(UpdateSourceCategoryRequest) returns (UpdateSourceCategoryResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  };

  rpc CreateSource(CreateSourceRequest) returns (CreateSourceResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  };
  rpc DeleteSource(DeleteSourceRequest) returns (DeleteSourceResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  };
  rpc UpdateSource(UpdateSourceRequest) returns (UpdateSourceResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  };

  rpc ListSourcesUpdatedAt(ListSourcesUpdatedAtRequest) returns (ListSourcesUpdatedAtResponse) {
    option (permission.v1.is_backend) = true;
    option (permission.v1.minimum_role) = ROLE_SUPER_ADMIN;
  };
}

message ListSourceTypesRequest {}

message ListSourceTypesResponse {
  repeated SourceType source_types = 1;
}

message SourceType {
  string id = 1;
  string name = 2;
  uint64 position = 3;
}

message ListSourceCategoriesRequest {
  string source_type_id = 1;
}

message ListSourceCategoriesResponse {
  repeated SourceCategory source_categories = 1;
}

message SourceCategory {
  string id = 1;
  string name = 2;
  uint64 position = 3;
  SourceType source_type = 4;
}

message ListSourcesRequest {
  string source_type_id = 1;
  string source_category_id = 2;
  bool include_not_show = 3;
}

message ListSourcesResponse {
  repeated Source sources = 1;
}

message GetSourceRequest {
  string id = 1;
}

message GetSourceResponse {
  Source source = 1;
}

message Source {
  string id = 1;
  string name_chinese = 2;
  bool is_chinese = 3;
  uint64 position = 4;
  bool allow_image = 5;
  SourceType source_type = 6;
  SourceCategory source_category = 7;
  bool is_show = 8;
}

message CreateSourceTypeRequest {
  string name = 1;
  uint64 position = 2;
}

message CreateSourceTypeResponse {
}

message DeleteSourceTypeRequest {
  string id = 1;
}

message DeleteSourceTypeResponse {
}

message UpdateSourceTypeRequest {
  string id = 1;
  string name = 2;
  uint64 position = 3;
}

message UpdateSourceTypeResponse {
}

message CreateSourceCategoryRequest {
  string source_type_id = 1;
  string name = 2;
  uint64 position = 3;
}

message CreateSourceCategoryResponse {
}

message DeleteSourceCategoryRequest {
  string id = 1;
}

message DeleteSourceCategoryResponse {
}

message UpdateSourceCategoryRequest {
  string id = 1;
  string source_type_id = 2;
  string name = 3;
  uint64 position = 4;
}

message UpdateSourceCategoryResponse {
}

message CreateSourceRequest {
  string id = 1;
  string name_chinese = 2;
  bool is_chinese = 3;
  uint64 position = 4;
  bool allow_image = 5;
  string source_category_id = 6;
}

message CreateSourceResponse {
}

message DeleteSourceRequest {
  string id = 1;
}

message DeleteSourceResponse {
}

message UpdateSourceRequest {
  string id = 1;
  string name_chinese = 2;
  bool is_chinese = 3;
  uint64 position = 4;
  bool allow_image = 5;
  string source_category_id = 6;
  bool is_show = 7;
}

message UpdateSourceResponse {
}

message ListSourcesUpdatedAtRequest {

}

message ListSourcesUpdatedAtResponse {
  repeated SourceUpdatedAt items = 1;
}


message SourceUpdatedAt {
  Source source = 1;
  uint64 updated_at = 2;
  string link = 3;
  string title = 4;
  uint64 published_at = 5;
}
